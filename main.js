const token = '7533939766:AAE7nhfRlTnaZmdCzkMIflTl4yAJ1gDDswE'
import { Telegraf, Markup } from 'telegraf';
const webAppUrl = 'https://shelter-mini-app.web.app';
const bot = new Telegraf(token);
import { scheduleJob, cancelJob, RecurrenceRule } from 'node-schedule';

// –•—Ä–∞–Ω–∏–ª–∏—â–µ ID —Å–æ–æ–±—â–µ–Ω–∏–π
const messageStorage = {
  startMessages: {},
  infoMessages: {},
  mediaMessages: {}
};

const ADMIN_ID = 1316112504;
const ADMIN_PANEL_URL = 'https://shelter-mini-app.web.app/admin-panel'; // –°—Å—ã–ª–∫–∞ –Ω–∞ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å

// –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –ø–∞–º—è—Ç–∏
const db = {
  users: {},
  notifications: [
    {
      id: 1,
      title: "–û—Ç–∫—Ä—ã—Ç—ã–µ –¥–≤–µ—Ä–∏",
      description: "–ö–∞–∂–¥—É—é —Å—É–±–±–æ—Ç—É —Å 10:00 –¥–æ 12:00 –º—ã –∂–¥–µ–º –≤–∞—Å –Ω–∞ –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ —Ö–≤–æ—Å—Ç–∏–∫–∞–º–∏!",
      date: "weekly-saturday",
      isActive: true
    }
  ]
};

const reminders = {
  jobs: {}, // –•—Ä–∞–Ω–∏—Ç –∞–∫—Ç–∏–≤–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
  list: []  // –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
};

const userStates = {}; // –•—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function initUser(userId) {
  if (!db.users[userId]) {
    db.users[userId] = {
      notificationsEnabled: true,
      subscribed: true
    };
  }
  return db.users[userId];
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
function notificationsKeyboard(userId) {
  const user = initUser(userId);
  const notificationsEnabled = user.notificationsEnabled !== false;
  
  return Markup.inlineKeyboard([
    [
      Markup.button.callback(
        notificationsEnabled ? 'üîî –†–∞—Å—Å—ã–ª–∫–∏: –í–ö–õ' : 'üîï –†–∞—Å—Å—ã–ª–∫–∏: –í–´–ö–õ', 
        'toggle_notifications'
      )
    ],
    [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_start')]
  ]);
}

const cancelKeyboard = Markup.inlineKeyboard([
  [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∏—Ç—å', 'cancel_report')]
]);

// –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã
const getMainKeyboard = (userId) => {
  const buttons = [
    [Markup.button.webApp('üê∂ –ö–∞—Ç–∞–ª–æ–≥ –ø–∏—Ç–æ–º—Ü–µ–≤ üê±', `${webAppUrl}/shelter`)],
    [Markup.button.callback('üêï –°–æ–æ–±—â–∏—Ç—å –æ –∂–∏–≤–æ—Ç–Ω–æ–º üêà', 'report_animal')],
    [Markup.button.callback('üêæ –û –ø—Ä–∏—é—Ç–µ', 'shelter_info')],
    /*[Markup.button.callback('üìù –ó–∞–±—Ä–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞', 'adoption_info')],*/
    [Markup.button.callback('üí¨ –í–æ–ª–æ–Ω—Ç–µ—Ä—ã', 'contact_curator')],
    [Markup.button.callback('üîî –†–∞—Å—Å—ã–ª–∫–∏', 'notifications_settings')],
    [Markup.button.callback('‚ù§Ô∏è –ü–æ–º–æ—â—å –ø—Ä–∏—é—Ç—É', 'donate')]
  ];

  if (userId === ADMIN_ID) {
    buttons.unshift([Markup.button.callback('üëë –ê–¥–º–∏–Ω', 'admin_menu')]);
  }

  return Markup.inlineKeyboard(buttons);
};

const adminKeyboard = Markup.inlineKeyboard([
  [Markup.button.webApp('üìä –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å', ADMIN_PANEL_URL)],
  [Markup.button.callback('‚ûï –î–æ–±–∞–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', 'add_reminder')],
  [Markup.button.callback('üóë –£–¥–∞–ª–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ', 'remove_reminder')],
  [Markup.button.callback('üì¢ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞', 'test_broadcast')],
  [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_start')]
]);

// –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é
async function sendStartMenu(ctx) {
  const text = `üêæ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫–æ–µ –ì–æ—Ä–æ–¥—Å–∫–æ–µ –û–±—â–µ—Å—Ç–≤–æ –ó–∞—â–∏—Ç—ã –ñ–∏–≤–æ—Ç–Ω—ã—Ö!\n\n` +
    `–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:\n\n` +
    `‚úÖ –ù–∞–π—Ç–∏ –ø–∏—Ç–æ–º—Ü–∞ –ø–æ –¥—É—à–µ\n` +
    `‚úÖ –£–∑–Ω–∞—Ç—å, –∫–∞–∫ –∑–∞–±—Ä–∞—Ç—å –∂–∏–≤–æ—Ç–Ω–æ–µ –∏–ª–∏ –ø–æ–º–æ—á—å –ø—Ä–∏—é—Ç—É\n` +
    `‚úÖ –°–≤—è–∑–∞—Ç—å—Å—è —Å –≤–æ–ª–æ–Ω—Ç–µ—Ä–∞–º–∏ –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–æ–≤–µ—Ç—ã\n\n` +
    `–ù–∞—à –ø—Ä–∏—é—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫–µ. –ö–∞–∂–¥—ã–π –ø–∏—Ç–æ–º–µ—Ü –∏—â–µ—Ç —Å–≤–æ—é —Å–µ–º—å—é ‚Äî –º–æ–∂–µ—Ç, —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –≤—ã?\n\n` +
    `üëá –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ –≤–∞—Å –∏–Ω—Ç–µ—Ä–µ—Å—É–µ—Ç:`;

  try {
    const sentMessage = await ctx.reply(text, getMainKeyboard(ctx.from.id));
    messageStorage.startMessages[ctx.chat.id] = sentMessage.message_id;
    
    if (messageStorage.infoMessages[ctx.chat.id]) {
      await ctx.deleteMessage(messageStorage.infoMessages[ctx.chat.id]).catch(() => {});
      delete messageStorage.infoMessages[ctx.chat.id];
    }
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ –º–µ–Ω—é:', e);
  }
}

// –ö–æ–º–∞–Ω–¥–∞ /start
bot.command('start', async (ctx) => {
  initUser(ctx.from.id);
  await sendStartMenu(ctx);
});

// –ö–æ–º–∞–Ω–¥–∞ /notifications
bot.command('notifications', async (ctx) => {
  initUser(ctx.from.id);
  const sentMessage = await ctx.reply(
    'üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –ø—Ä–∏—é—Ç–∞.',
    notificationsKeyboard(ctx.from.id)
  );
  
  if (messageStorage.infoMessages[ctx.chat.id]) {
    await ctx.deleteMessage(messageStorage.infoMessages[ctx.chat.id]).catch(() => {});
  }
  messageStorage.infoMessages[ctx.chat.id] = sentMessage.message_id;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∞–¥–º–∏–Ω-–º–µ–Ω—é
bot.action('admin_menu', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) {
    await ctx.answerCbQuery('‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω');
    return;
  }

  await ctx.editMessageText('üëë –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:', adminKeyboard);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
bot.action('add_reminder', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;

  userStates[ctx.from.id] = { step: 'awaiting_reminder_title' };
  await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:');
});

bot.action(['reminder_once', 'reminder_weekly'], async (ctx) => {
  const userId = ctx.from.id;
  if (!userStates[userId]?.date) return;

  const isWeekly = ctx.callbackQuery.data === 'reminder_weekly';
  const date = userStates[userId].date;
  
  const newReminder = {
    id: Date.now(),
    title: userStates[userId].title,
    description: userStates[userId].description,
    date: date,
    isWeekly: isWeekly
  };

  // –°–æ–∑–¥–∞–µ–º cron-–≤—ã—Ä–∞–∂–µ–Ω–∏–µ
  if (isWeekly) {
    const rule = new RecurrenceRule();
    rule.dayOfWeek = date.getDay(); // –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏ 0-6 (–≤—Å-—Å–±)
    rule.hour = date.getHours();
    rule.minute = date.getMinutes();
    newReminder.cron = rule;
  } else {
    newReminder.cron = `${date.getMinutes()} ${date.getHours()} ${date.getDate()} ${date.getMonth() + 1} *`;
  }

  // –î–æ–±–∞–≤–ª—è–µ–º –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
  reminders.list.push(newReminder);
  reminders.jobs[newReminder.id] = scheduleJob(newReminder.cron, () => {
    sendReminderNotification(newReminder);
  });

  delete userStates[userId];
  await ctx.editMessageText(
    `‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ "${newReminder.title}" —Å–æ–∑–¥–∞–Ω–æ!\n` +
    `–¢–∏–ø: ${isWeekly ? '–µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ' : '—Ä–∞–∑–æ–≤–æ–µ'}\n` +
    `–î–∞—Ç–∞: ${date.toLocaleString()}`,
    { reply_markup: { inline_keyboard: [[Markup.button.callback('‚óÄÔ∏è –í –º–µ–Ω—é', 'admin_menu')]] }}
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–¥–º–∏–Ω–∞
bot.on('text', async (ctx) => {
  // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –∞–¥–º–∏–Ω –ª–∏ —ç—Ç–æ –∏ –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –æ–Ω –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
  if (ctx.from.id === ADMIN_ID && userStates[ctx.from.id] && userStates[ctx.from.id].step) {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –∞–¥–º–∏–Ω–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π)
    const state = userStates[ctx.from.id];
    
    if (state.step === 'awaiting_reminder_title') {
      state.title = ctx.message.text;
      state.step = 'awaiting_reminder_description';
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:');
    } 
    else if (state.step === 'awaiting_reminder_description') {
      state.description = ctx.message.text;
      state.step = 'awaiting_reminder_date';
      await ctx.reply('–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú (–Ω–∞–ø—Ä–∏–º–µ—Ä 25.12.2023 15:30):');
    }
    else if (state.step === 'awaiting_reminder_date') {
      try {
        const [datePart, timePart] = ctx.message.text.split(' ');
        const [day, month, year] = datePart.split('.').map(Number);
        const [hours, minutes] = timePart.split(':').map(Number);
        
        const reminderDate = new Date(year, month - 1, day, hours, minutes);
        
        if (isNaN(reminderDate.getTime())) {
          throw new Error('–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –¥–∞—Ç–∞');
        }

        if (reminderDate < new Date()) {
          await ctx.reply('‚ùå –ù–µ–ª—å–∑—è —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–∞ –ø—Ä–æ—à–µ–¥—à—É—é –¥–∞—Ç—É');
          return;
        }

        state.date = reminderDate;
        state.step = 'awaiting_reminder_type';
        
        await ctx.reply(
          '–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:',
          Markup.inlineKeyboard([
            [Markup.button.callback('‚è∞ –†–∞–∑–æ–≤–æ–µ', 'reminder_once')],
            [Markup.button.callback('üîÑ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–µ', 'reminder_weekly')],
            [Markup.button.callback('‚ùå –û—Ç–º–µ–Ω–∞', 'cancel_reminder')]
          ])
        );
        
      } catch (e) {
        await ctx.reply('‚ùå –û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ –¥–∞—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç –î–î.–ú–ú.–ì–ì–ì–ì –ß–ß:–ú–ú');
        console.error('–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:', e);
      }
    }
  } else {
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (–∑–∞—è–≤–∫–∏ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö)
    await handleAnimalReport(ctx);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
bot.action('cancel_reminder', async (ctx) => {
  const userId = ctx.from.id;
  if (userStates[userId]) {
    delete userStates[userId];
    await ctx.editMessageText('–°–æ–∑–¥–∞–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ—Ç–º–µ–Ω–µ–Ω–æ');
    await sendStartMenu(ctx);
  }
});

// –§—É–Ω–∫—Ü–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async function sendReminderNotification(reminder) {
  for (const userId in db.users) {
    if (db.users[userId].notificationsEnabled !== false) {
      try {
        await bot.telegram.sendMessage(
          userId,
          `üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: ${reminder.title}\n\n` +
          `${reminder.description}\n\n` +
          `‚è∞ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ –Ω–∞: ${reminder.date.toLocaleString()}\n\n` +
          `–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–∫–ª—é—á–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö /notifications`,
          { parse_mode: 'HTML' }
        );
      } catch (e) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, e);
      }
    }
  }
}

// –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞
bot.action('test_broadcast', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;
  
  await ctx.reply('–¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–∞—Ç–∞...');
  const testEvent = {
    title: "–¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
    description: "–≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞",
    date: new Date().toLocaleDateString()
  };
  await sendNotificationToAll(testEvent);
  await ctx.reply('‚úÖ –¢–µ—Å—Ç–æ–≤–∞—è —Ä–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
async function sendNotificationToAll(notification) {
  for (const userId in db.users) {
    if (db.users[userId].notificationsEnabled !== false) {
      try {
        await bot.telegram.sendMessage(
          userId,
          `üîî ${notification.title}\n\n${notification.description}\n\n${notification.date}`,
          { parse_mode: 'HTML' }
        );
      } catch (e) {
        console.error(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${userId}:`, e);
      }
    }
  }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞—Å—Ç—Ä–æ–µ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
bot.action('notifications_settings', async (ctx) => {
  initUser(ctx.from.id);
  await ctx.editMessageText(
    'üîî –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:\n\n–í—ã –º–æ–∂–µ—Ç–µ –≤–∫–ª—é—á–∏—Ç—å/–≤—ã–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –æ —Å–æ–±—ã—Ç–∏—è—Ö –ø—Ä–∏—é—Ç–∞.',
    notificationsKeyboard(ctx.from.id)
  );
});

// –í–∫–ª—é—á–µ–Ω–∏–µ/–≤—ã–∫–ª—é—á–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
bot.action('toggle_notifications', async (ctx) => {
  const userId = ctx.from.id;
  const user = initUser(userId);
  user.notificationsEnabled = !user.notificationsEnabled;
  
  await ctx.answerCbQuery(`–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è ${user.notificationsEnabled ? '–≤–∫–ª—é—á–µ–Ω—ã' : '–≤—ã–∫–ª—é—á–µ–Ω—ã'}`);
  await ctx.editMessageReplyMarkup(notificationsKeyboard(userId).reply_markup);
});

// –£–¥–∞–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
bot.action('remove_reminder', async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;

  if (reminders.list.length === 0) {
    await ctx.answerCbQuery('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π');
    return;
  }

  const buttons = reminders.list.map(reminder => 
    [Markup.button.callback(
      `${reminder.title} (${reminder.date.toLocaleString()})`, 
      `remove_reminder_${reminder.id}`
    )]
  );

  await ctx.editMessageText(
    '–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è:',
    Markup.inlineKeyboard([...buttons, [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'admin_menu')]])
  );
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É–¥–∞–ª–µ–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
bot.action(/remove_reminder_(\d+)/, async (ctx) => {
  if (ctx.from.id !== ADMIN_ID) return;

  const reminderId = parseInt(ctx.match[1]);
  const index = reminders.list.findIndex(r => r.id === reminderId);
  
  if (index !== -1) {
    // –û—Ç–º–µ–Ω—è–µ–º –∑–∞–¥–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞
    if (reminders.jobs[reminderId]) {
      cancelJob(reminders.jobs[reminderId]);
      delete reminders.jobs[reminderId];
    }
    
    // –£–¥–∞–ª—è–µ–º –∏–∑ —Å–ø–∏—Å–∫–∞
    reminders.list.splice(index, 1);
    
    await ctx.answerCbQuery('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ');
    await ctx.editMessageText('‚úÖ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ!', adminKeyboard);
  } else {
    await ctx.answerCbQuery('–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
  }
});

// –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
function sendWeeklyNotification() {
  const notification = {
    title: "–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –ø—Ä–∏—é—Ç–µ",
    description: "–ó–∞–≤—Ç—Ä–∞ —Å—É–±–±–æ—Ç–∞ - –¥–µ–Ω—å –æ—Ç–∫—Ä—ã—Ç—ã—Ö –¥–≤–µ—Ä–µ–π –≤ –Ω–∞—à–µ–º –ø—Ä–∏—é—Ç–µ! –° 10:00 –¥–æ 12:00 –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ—Å–µ—Ç–∏—Ç—å –Ω–∞—Å –∏ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –Ω–∞—à–∏–º–∏ –ø–∏—Ç–æ–º—Ü–∞–º–∏.",
    date: new Date().toLocaleDateString()
  };
  sendNotificationToAll(notification);
}

scheduleJob('0 9 * * 5', sendWeeklyNotification); // –ö–∞–∂–¥—É—é –ø—è—Ç–Ω–∏—Ü—É –≤ 9:00

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ù–∞–∑–∞–¥"
bot.action('back_to_start', async (ctx) => {
  try {
    // –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (messageStorage.mediaMessages[ctx.chat.id]) {
      const [photoId, textId] = messageStorage.mediaMessages[ctx.chat.id];
      await ctx.deleteMessage(photoId).catch(() => {});
      await ctx.deleteMessage(textId).catch(() => {});
      delete messageStorage.mediaMessages[ctx.chat.id];
    }
    
    // –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ –º–µ–Ω—é
    await sendStartMenu(ctx);
    
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ "–ù–∞–∑–∞–¥":', e);
    // –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ –º–µ–Ω—é
    await sendStartMenu(ctx);
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–°–æ–æ–±—â–∏—Ç—å –æ –∂–∏–≤–æ—Ç–Ω–æ–º"
bot.action('report_animal', async (ctx) => {
  // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–∞–º–∏
  try {
    await ctx.deleteMessage();
  } catch (e) {
    console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ:', e);
  }

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  userStates[ctx.from.id] = {
    state: 'AWAITING_ANIMAL_REPORT',
    messageId: ctx.update.callback_query.message.message_id
  };

  // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–ø–∏—Å–∞–Ω–∏–µ –∂–∏–≤–æ—Ç–Ω–æ–≥–æ
  const sentMessage = await ctx.reply(
    '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–ø–∏—à–∏—Ç–µ –∂–∏–≤–æ—Ç–Ω–æ–µ –∏ —É–∫–∞–∂–∏—Ç–µ –º–µ—Å—Ç–æ, –≥–¥–µ –≤—ã –µ–≥–æ –≤–∏–¥–µ–ª–∏.\n\n' +
    '–ü—Ä–∏–º–µ—Ä:\n' +
    '‚Ä¢ –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ: —É–ª. –õ–µ–Ω–∏–Ω–∞, 15 (–æ–∫–æ–ª–æ –º–∞–≥–∞–∑–∏–Ω–∞ "–ü—è—Ç—ë—Ä–æ—á–∫–∞")\n' +
    '‚Ä¢ –û–ø–∏—Å–∞–Ω–∏–µ: —á—ë—Ä–Ω—ã–π –ø—ë—Å —Å—Ä–µ–¥–Ω–µ–≥–æ —Ä–∞–∑–º–µ—Ä–∞, –≤ –æ—à–µ–π–Ω–∏–∫–µ\n' +
    '‚Ä¢ –°–æ—Å—Ç–æ—è–Ω–∏–µ: –≤—ã–≥–ª—è–¥–∏—Ç –∑–¥–æ—Ä–æ–≤—ã–º, –Ω–æ –≥–æ–ª–æ–¥–Ω—ã–º',
    cancelKeyboard
  );

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è
  userStates[ctx.from.id].requestMessageId = sentMessage.message_id;
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞—è–≤–∫–∏ –æ –∂–∏–≤–æ—Ç–Ω—ã—Ö)
const handleAnimalReport = async (ctx) => {
  const userId = ctx.from.id;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ä–µ–∂–∏–º–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ—Ç—á–µ—Ç–∞
  if (userStates[userId] && userStates[userId].state === 'AWAITING_ANIMAL_REPORT') {
    try {
      // –£–¥–∞–ª—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
      if (userStates[userId].requestMessageId) {
        await ctx.deleteMessage(userStates[userId].requestMessageId).catch(() => {});
      }

      const report = ctx.message.text;
      const userInfo = `üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${ctx.from.username || '–Ω–µ—Ç username'} (ID: ${userId})`;
      const reportText = `üö® –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ –±—Ä–æ–¥—è—á–µ–º –∂–∏–≤–æ—Ç–Ω–æ–º:\n\n${report}\n\n${userInfo}`;

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω—É
      await bot.telegram.sendMessage(
        ADMIN_ID,
        reportText,
        Markup.inlineKeyboard([
          [Markup.button.callback('‚úÖ –ü—Ä–∏–Ω—è—Ç—å', `approve_${userId}`)],
          [Markup.button.callback('‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', `reject_${userId}`)]
        ])
      );

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await ctx.reply('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É. –°–ø–∞—Å–∏–±–æ –∑–∞ –∑–∞–±–æ—Ç—É! ‚ù§Ô∏è\n\n–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.');

      // –£–¥–∞–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
      delete userStates[userId];

    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏:', e);
      await ctx.reply('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–π –∑–∞—è–≤–∫–∏. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
      delete userStates[userId];
    }
  }
};

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –∞–¥–º–∏–Ω–∞
bot.action(/approve_(\d+)/, async (ctx) => {
  const userId = ctx.match[1];
  await ctx.editMessageReplyMarkup({ inline_keyboard: [] }); // –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
  await ctx.reply('‚úÖ –ó–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞. –Ø —É–≤–µ–¥–æ–º–ª—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.');
  
  try {
    await bot.telegram.sendMessage(
      userId,
      '–í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ –±—Ä–æ–¥—è—á–µ–º –∂–∏–≤–æ—Ç–Ω–æ–º –±—ã–ª–∞ –æ–¥–æ–±—Ä–µ–Ω–∞! üéâ\n\n' +
      '–ù–∞—à–∏ –≤–æ–ª–æ–Ω—Ç—ë—Ä—ã —É–∂–µ –≤—ã–µ—Ö–∞–ª–∏ –Ω–∞ –º–µ—Å—Ç–æ. –°–ø–∞—Å–∏–±–æ, —á—Ç–æ –ø–æ–º–æ–≥–∞–µ—Ç–µ –∂–∏–≤–æ—Ç–Ω—ã–º! ‚ù§Ô∏è'
    );
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
    await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.');
  }
});

bot.action(/reject_(\d+)/, async (ctx) => {
  const userId = ctx.match[1];
  await ctx.editMessageReplyMarkup({ inline_keyboard: [] }); // –£–¥–∞–ª—è–µ–º –∫–Ω–æ–ø–∫–∏
  await ctx.reply('‚ùå –ó–∞—è–≤–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.');
  
  try {
    await bot.telegram.sendMessage(
      userId,
      '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –±—ã–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞.\n\n' +
      '–í–æ–∑–º–æ–∂–Ω–æ, –∂–∏–≤–æ—Ç–Ω–æ–µ —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ –∏–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –±—ã–ª–∞ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø–æ–ª–Ω–æ–π.'
    );
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
    await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å —É–≤–µ–¥–æ–º–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –í–æ–∑–º–æ–∂–Ω–æ, –æ–Ω –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –±–æ—Ç–∞.');
  }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–º–µ–Ω—ã
bot.action('cancel_report', async (ctx) => {
  const userId = ctx.from.id;
  
  if (userStates[userId] && userStates[userId].state === 'AWAITING_ANIMAL_REPORT') {
    try {
      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏
      if (userStates[userId].requestMessageId) {
        await ctx.deleteMessage(userStates[userId].requestMessageId).catch(() => {});
      }
      
      // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –æ—Ç–º–µ–Ω—ã
      await ctx.deleteMessage();
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç–º–µ–Ω—ã
      await ctx.reply('–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç—á—ë—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.');
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
      await sendStartMenu(ctx);
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –æ—Ç—á–µ—Ç–∞:', e);
      await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–º–µ–Ω–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –æ—Ç—á—ë—Ç–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.');
    } finally {
      delete userStates[userId];
    }
  }
});

// –û–±—â–∏–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫
bot.on('callback_query', async (ctx) => {
  try {
    // –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (messageStorage.startMessages[ctx.chat.id]) {
      await ctx.deleteMessage(messageStorage.startMessages[ctx.chat.id]).catch(() => {});
      delete messageStorage.startMessages[ctx.chat.id];
    }

    // –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –¥–ª—è –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤
    const backButton = Markup.inlineKeyboard([
      [Markup.button.callback('‚óÄÔ∏è –ù–∞–∑–∞–¥', 'back_to_start')]
    ]);

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –µ–≥–æ ID
    let replyMessage;
    switch (ctx.callbackQuery.data) {
      case 'adoption_info':
        replyMessage = await ctx.reply('–ß—Ç–æ–±—ã –∑–∞–±—Ä–∞—Ç—å –ø–∏—Ç–æ–º—Ü–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∞–Ω–∫–µ—Ç—É: [—Å—Å—ã–ª–∫–∞ –Ω–∞ Google Forms]', backButton);
        break;
      case 'contact_curator':
        replyMessage = await ctx.reply('–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞—à–µ–º—É –≤–æ–ª–æ–Ω—Ç–µ—Ä—É: @PriutPervoVolonter', backButton);
        break;
      case 'donate':
        try {
          const photoMessage = await ctx.replyWithPhoto(
            { source: './assets/sbp-qr.jpeg' },
            { caption: 'üì≤ –û—Ç—Å–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —á–µ—Ä–µ–∑ –°–ë–ü' }
          );

          const textMessage = await ctx.replyWithHTML(
            `<b>–†–µ–∫–≤–∏–∑–∏—Ç—ã –¥–ª—è –ø–æ–º–æ—â–∏:</b>\n\n` +
            `üí≥ <code>4817 7601 6292 2623</code>\n` +
            `–ò—Ä–∏–Ω–∞ –Æ—Ä—å–µ–≤–Ω–∞ –û.\n\n` +
            `üìû +7-904-16-43-660\n\n` +
            `üü† Qiwi-–∫–æ—à–µ–ª–µ–∫:\n<code>8-902-272-06-95</code>\n\n` +
            `üü° –Ø–Ω–¥–µ–∫—Å.–î–µ–Ω—å–≥–∏:\n<code>4100 1508 0324 790</code>`,
            backButton
          );

          messageStorage.mediaMessages[ctx.chat.id] = [
            photoMessage.message_id,
            textMessage.message_id
          ];
        } catch (e) {
          console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –¥–æ–Ω–∞—Ç–∞:', e);
          await ctx.reply('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –í–æ—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç—ã:', backButton);
        }
        break;
      case 'shelter_info':
        replyMessage = await ctx.replyWithHTML(
          `–ú–µ—Å—Ç–Ω–∞—è –æ–±—â–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è "–ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫–æ–µ –≥–æ—Ä–æ–¥—Å–∫–æ–µ –æ–±—â–µ—Å—Ç–≤–æ ` +
          `–∑–∞—â–∏—Ç—ã –∂–∏–≤–æ—Ç–Ω—ã—Ö" –æ—Å–Ω–æ–≤–∞–Ω–∞ –≥—Ä—É–ø–ø–æ–π –≤–æ–ª–æ–Ω—Ç—ë—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –Ω–µ –±–µ–∑—Ä–∞–∑–ª–∏—á–Ω–∞ —Å—É–¥—å–±–∞ –±–µ–∑–¥–æ–º–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö.\n\n` +
          `–í –Ω–∞—à–µ–º –ø—Ä–∏—é—Ç–µ –¥–ª—è –±–µ–∑–¥–æ–º–Ω—ã—Ö –∂–∏–≤–æ—Ç–Ω—ã—Ö –ø—Ä–æ–∂–∏–≤–∞—é—Ç –±–æ–ª–µ–µ 170 —Å–æ–±–∞–∫ –∏ 60 –∫–æ—à–µ–∫.\n\n` +
          `–í—Å–µ –∂–∏–≤–æ—Ç–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –ª–µ—á–µ–Ω–∏–µ, –≤–∞–∫—Ü–∏–Ω–∞—Ü–∏—é, —Å—Ç–µ—Ä–∏–ª–∏–∑–∞—Ü–∏—é, –∫–ª–µ–π–º–µ–Ω–∏–µ –∏ —á–∏–ø–∏—Ä–æ–≤–∞–Ω–∏–µ.\n\n` +
          `–ú—ã –ø–æ–º–æ–≥–ª–∏ –æ–±—Ä–µ—Å—Ç–∏ –¥–æ–º —É–∂–µ –±–æ–ª–µ–µ 8 —Ç—ã—Å. –∂–∏–≤–æ—Ç–Ω—ã–º!\n\n` +
          `–û—Å–Ω–æ–≤–Ω–∞—è –º–∏—Å—Å–∏—è –Ω–∞—à–µ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞ - —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —É –Ω–∞—Å–µ–ª–µ–Ω–∏—è –∫—É–ª—å—Ç—É—Ä—ã –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏ –±–µ—Ä–µ–∂–Ω–æ–≥–æ –æ—Ç–Ω–æ—à–µ–Ω–∏—è –∫ –∂–∏–≤–æ—Ç–Ω—ã–º.\n\n` +
          `<b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n\n` +
          `<b>üìû –¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 (950) 649-44-62\n\n` +
          `<b>üè† –ê–¥—Ä–µ—Å:</b> –≥. –ü–µ—Ä–≤–æ—É—Ä–∞–ª—å—Å–∫, –î–∏–Ω–∞—Å–æ–≤—Å–∫–æ–µ —à–æ—Å—Å–µ, 1/2\n\n` +
          `<b>üï∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã:</b> –ï–∂–µ–¥–Ω–µ–≤–Ω–æ —Å 09:00 - 19:00\n`,
          backButton
        );
        break;
    }

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
    if (replyMessage) {
      messageStorage.infoMessages[ctx.chat.id] = replyMessage.message_id;
    }

    await ctx.answerCbQuery();
  } catch (e) {
    console.error('–û—à–∏–±–∫–∞:', e);
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
process.on('unhandledRejection', (error) => {
  console.error('Unhandled Rejection:', error);
});

process.on('uncaughtException', (error) => {
  console.error('Uncaught Exception:', error);
});

bot.launch();